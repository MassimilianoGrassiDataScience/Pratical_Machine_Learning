dir.create("./data")
download.file("http://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv", destfile = "./data/training.csv")
```{r, cache=TRUE}
dir.create("./data")
download.file("http://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv", destfile = "./data/training.csv")
download.file("http://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv", destfile="./data/testing.csv")
trainData<-read.csv("./data/training.csv")
testData<-read.csv("./data/testing.csv")
```
summary(trainData)
View(testData)
train<-read.csv("./data/training.csv")
test<-read.csv("./data/testing.csv")
train_cleaned<-train[,-c(1:7,12:36,50:59,69:83,87:101,103:112,125:139,141:150)]
```
summary(train_cleaned)
library('caret')
training<-read.csv("./data/training.csv")
testing<-read.csv("./data/testing.csv")
?createDataPartition
train_validation_split  <- createDataPartition(training$classe, p=0.8, list = FALSE)
train_validation_split  <- createDataPartition(training$classe, p=0.8, list = FALSE)
train  <- training[,train_validation_split]
validation  <- training[,train_validation_split]
train_validation_split  <- createDataPartition(training$classe, p=0.8, list = FALSE)
train  <- training[train_validation_split,]
validation  <- training[-train_validation_split,]
train_cleaned<-train[,-c(1:7,12:36,50:59,69:83,87:101,103:112,125:139,141:150)]
?trainControl
cross_validation  <- trainControl(method = cv, number = 1000)
Model_Random_Forest  <- train(classe ~., method = 'rf', data=train_cleaned, trControl = cross_validation)
cross_validation  <- trainControl(method = cv, number = 1000)
cross_validation  <- trainControl(method = 'cv', number = 1000)
Model_Random_Forest  <- train(classe ~., method = 'rf', data=train_cleaned, trControl = cross_validation)
```{r, cache=TRUE}
cross_validation  <- trainControl(method = 'cv', number = 10)
Model_Random_Forest  <- train(classe ~., method = 'rf', data=train_cleaned, trControl = cross_validation)
```
print(Model_Random_Forest)
Result_Validation  <- predict(Model_Random_Forest, Validation)
confusionMatrix(Result_Validation, validation$classe)
Result_Validation  <- predict(Model_Random_Forest, validation)
confusionMatrix(Result_Validation, validation$classe)
confusion_matrix  <- confusionMatrix(Result_Validation, validation$classe)
head(confusion_matrix)
confusion_matrix[[3]]
confusion_matrix[[3]][1]
confusion_matrix[[3]][2]
The estimated out-of-sample classification accuracy is ´r confusion_matrix[[3]][1]´ and kappa is ´r confusion_matrix[[3]][2]´, while the estimated classification error is ´r (1-confusion_matrix[[3]][1])´, as calculated in the validation sample not used to build the madel.
Result_Testing  <- predict(Model_Random_Forest, testing)
confusion_matrix  <- confusionMatrix(Result_Testing, testing$classe)
Result_Testing
testing$classe
training$classe
Result_Testing  <- as.character(Result_Testing)
Result_Testing  <- as.character(predict(Model_Random_Forest, testing))
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
dir.create("./testing_results")
setwd("./testing_results")
pml_write_files(Result_Testing)
train[,-c(1:7,12:36,50:59,69:83,87:101,103:112,125:139,141:150)]
summary(train[,-c(1:7,12:36,50:59,69:83,87:101,103:112,125:139,141:150)])
summary(train[,c(1:7,12:36,50:59,69:83,87:101,103:112,125:139,141:150)])
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
The estimated out-of-sample classification accuracy is ´r confusionmatrixValidation[[3]][1]´ and kappa is ´r confusionmatrixValidation[[3]][2]´, while the estimated classification error is ´r (1-confusionmatrixValidation[[3]][1])´, as calculated in the validation sample not used to build the madel.
The estimated out-of-sample classification accuracy is `r confusionmatrixValidation[[3]][1]` and kappa is `r confusionmatrixValidation[[3]][2]`, while the estimated classification error is `r (1-confusionmatrixValidation[[3]][1])`, as calculated in the validation sample not used to build the madel.
output:
html_document:
keep_md: yes
